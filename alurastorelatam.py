# -*- coding: utf-8 -*-
"""AluraStoreLatam.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tT7BamjfhQcVp-hxP0vS9M46AupQcSe7

### Importación de datos
"""

import pandas as pd

url = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_1%20.csv"
url2 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_2.csv"
url3 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_3.csv"
url4 = "https://raw.githubusercontent.com/alura-es-cursos/challenge1-data-science-latam/refs/heads/main/base-de-datos-challenge1-latam/tienda_4.csv"

tienda = pd.read_csv(url)
tienda2 = pd.read_csv(url2)
tienda3 = pd.read_csv(url3)
tienda4 = pd.read_csv(url4)

tienda.head()

"""#1. Análisis de facturación

Facturacion toral de cada tienda


"""

print(tienda.columns)

tiendas = [tienda, tienda2, tienda3, tienda4]
facturaciones = [listaTienda['Precio'].sum() for listaTienda in tiendas]
print("Facturación Total por Tienda:")
for i, facturacion in enumerate(facturaciones, start=1):
    print(f'Tienda {i}: $ {facturacion:,.1f}')

import matplotlib.pyplot as plt

tiendaNombre = [f'Tienda {i}' for i in range(1, len(facturaciones) + 1)]

minimo = facturaciones.index(min(facturaciones))
colores = ["blue"] * len(facturaciones)
colores[minimo] = "orange"


plt.figure(figsize=(8, 6))
plt.bar(tiendaNombre, facturaciones, color=colores)
plt.title('Facturación Total por Tienda')
plt.xlabel('Tiendas')
plt.ylabel('Facturación')
plt.xticks(rotation=0)
plt.show()

"""# 2. Ventas por categoría
categorias mas populares

*   Elemento de la lista
*   Elemento de la lista


"""

def ventasPorCategoria(listaTienda, nombreTienda):

    ventasCategoria = listaTienda['Categoría del Producto'].value_counts()

    print(f"Ventas por Categoría - {nombreTienda}:")
    print(ventasCategoria, "\n")

tiendasLista = [tienda, tienda2, tienda3, tienda4]
nombresTiendas = ["Tienda 1", "Tienda 2", "Tienda 3", "Tienda 4"]

for listaTienda, nombre in zip(tiendasLista, nombresTiendas):
    ventasPorCategoria(listaTienda, nombre)

"""# 3. Calificación promedio de la tienda

promedio de calificacion de los clientes

"""

calificacionesPromedioTienda = [datos["Calificación"].mean() for datos in tiendasLista]

print("Calificación Promedio de cada Tienda:")
for tiendaCalificacion, calificacionPromedio in enumerate(calificacionesPromedioTienda, start=1):
    print(f"Tienda {tiendaCalificacion}: {calificacionPromedio:.2f}")

plt.figure(figsize=(8, 6))
plt.bar(nombres_tiendas, calificacionesPromedioTienda, color='blue')
plt.title("Calificación Promedio de Cada Tienda")
plt.xlabel("Tiendas")
plt.ylabel("Calificación Promedio")

min_cal = min(calificacionesPromedioTienda)
max_cal = max(calificacionesPromedioTienda)
margen = (max_cal - min_cal) * 0.1
plt.ylim(min_cal - margen, max_cal + margen)

for indice, cal in enumerate(calificacionesPromedioTienda):
    plt.text(indice, cal + 0.001, f"{cal:.2f}", ha='center', va='bottom', fontsize=10)

plt.show()



"""# 4. Productos más y menos vendidos"""

def productosMasMenosVendidos(datos, nombreTienda, venta=5):
    ventas_productos = datos["Producto"].value_counts()

    productosMasVendidos = ventas_productos.head(venta)

    productosMenosVendidos = ventas_productos.sort_values(ascending=True).head(venta)

    print(f"--- {nombreTienda} ---")
    print("Productos más vendidos:")
    print(productosMasVendidos, "\n")
    print("Productos menos vendidos:")
    print(productosMenosVendidos, "\n")

tiendasLista = [tienda, tienda2, tienda3, tienda4]
nombresTiendas = ["Tienda 1", "Tienda 2", "Tienda 3", "Tienda 4"]

for datos, nombre in zip(tiendasLista, nombresTiendas):
    productosMasMenosVendidos(datos, nombre, venta=5)



"""# 5. Envío promedio por tienda

costo promedio del envio

> Agregar bloque entrecomillado


"""

envioPromedioTienda = [datos["Costo de envío"].mean() for datos in tiendasLista]

print("Costo de Envío Promedio por Tienda:")

for tienda, costoEnvioPromedio in enumerate(envioPromedioTienda, start=1):
    print(f"Tienda {tienda}: $ {costoEnvioPromedio:,.2f}")

plt.figure(figsize=(8, 6))
plt.bar(nombresTiendas, envioPromedioTienda, color='blue')
plt.title("Costo de Envío Promedio por Tienda")
plt.xlabel("Tiendas")
plt.ylabel("Costo de Envío Promedio (en dólares)")
plt.show()

"""#Graficos"""

facturaciones = [datos['Precio'].sum() for datos in tiendasLista]

plt.figure(figsize=(8,6))
plt.bar(nombresTiendas, facturaciones, color='blue')
plt.title("Facturación Total por Tienda")
plt.xlabel("Tiendas")
plt.ylabel("Facturación Total (en dólares)")
plt.show()

tienda1 = tiendasLista[0]
ventasCategoriaTienda1 = tienda1["Categoría del Producto"].value_counts()

plt.figure(figsize=(8,8))
plt.pie(ventasCategoriaTienda1,
        labels=ventasCategoriaTienda1.index,
        autopct='%1.1f%%',
        startangle=140,
        colors=plt.cm.Pastel1(range(len(ventasCategoriaTienda1))))
plt.title("Distribución de Ventas por Categoría - Tienda 1")
plt.show()

envioPromedioTienda = [datos["Costo de envío"].mean() for datos in tiendasLista]
calificacionesPromedioTienda = [datos["Calificación"].mean() for datos in tiendasLista]

plt.figure(figsize=(8,6))
plt.scatter(envioPromedioTienda, calificacionesPromedioTienda, color='green', s=100)

for i, tienda_nombre in enumerate(nombresTiendas):
    plt.text(envioPromedioTienda[i] * 1.002, calificacionesPromedioTienda[i], tienda_nombre, fontsize=12)

plt.title("Relación entre Costo de Envío Promedio y Calificación Promedio")
plt.xlabel("Costo de Envío Promedio (en dólares)")
plt.ylabel("Calificación Promedio")
plt.show()



"""# Informe Final: Recomendación para Venta de Tienda en Alura Store

## Introducción

El objetivo de este análisis fue evaluar el desempeño de las cuatro tiendas de Alura Store utilizando diversas métricas clave, tales como:

- **Facturación Total:** Ingresos totales obtenidos por cada tienda, basados en la suma de los precios de cada venta.
- **Ventas por Categoría:** Distribución de las ventas en función de las categorías de productos, permitiendo identificar qué línea de productos tiene mayor aceptación.
- **Calificación Promedio de Clientes:** Nivel de satisfacción de los clientes, calculado a partir de las calificaciones asignadas.
- **Productos Más y Menos Vendidos:** Frecuencia con la que se han vendido los productos, para detectar fortalezas y debilidades en el portafolio.
- **Costo de Envío Promedio:** Promedio del costo de envío, que impacta en la rentabilidad y en la estructura de costos.

Con base en estas métricas y en las visualizaciones generadas, se busca identificar cuál de las tiendas presenta un desempeño inferior y, por ello, es candidata para ser vendida.

## Análisis y Resultados

### 1. Facturación Total

Cada tienda fue evaluada según la suma total de los precios de venta de sus productos. Los resultados fueron:

- **Tienda 1:** \$1,150,880,400.0  
- **Tienda 2:** \$1,116,343,500.0  
- **Tienda 3:** \$1,098,019,600.0  
- **Tienda 4:** \$1,038,375,700.0  

**Visualización:** Se generó un gráfico de barras en el que se destacó la tienda con menor facturación (Tienda 4) en color naranja, lo que evidencia un bajo desempeño comercial.

### 2. Ventas por Categoría

El análisis de ventas por categoría mostró la distribución de los productos vendidos en cada tienda:

- **Observaciones Relevantes:**  
  - En todas las tiendas, las categorías como *Muebles*, *Electrónicos*, *Juguetes* y *Electrodomésticos* se mantuvieron entre las más vendidas.  
  - Este análisis permite identificar las líneas de productos más populares y detectar áreas estratégicas de enfoque o posibles debilidades en el portafolio.

**Visualización:** Se generaron gráficos de barras horizontales por tienda que muestran la participación de cada categoría en el total de ventas.

### 3. Calificación Promedio de Clientes

El nivel de satisfacción del cliente se evaluó a partir de las calificaciones promedio:

- **Tienda 1:** 3.98  
- **Tienda 2:** 4.04  
- **Tienda 3:** 4.05  
- **Tienda 4:** 4.00  

**Observación:**  
Aunque las diferencias son sutiles, Tienda 1 y Tienda 4 presentan calificaciones ligeramente inferiores en comparación con Tienda 2 y Tienda 3. Se generó un gráfico de barras con un "zoom" en el eje Y para resaltar estas diferencias.

### 4. Productos Más y Menos Vendidos

Se identificaron los productos con mayor y menor frecuencia de ventas en cada tienda:

- **Hallazgos Relevantes:**  
  - Cada tienda cuenta con un portafolio en el que ciertos productos destacan por su alta rotación, mientras que otros tienen demanda reducida.
  - Esto permite conocer mejor las fortalezas de cada tienda y detectar oportunidades de mejora en la oferta.

**Visualización:**  
Se generaron dos gráficos de barras para cada tienda: uno para los productos más vendidos y otro para los menos vendidos, facilitando la comparación visual.

### 5. Costo de Envío Promedio

El análisis del costo de envío mostró el promedio que cada tienda invierte en logística:

- **Tienda 1:** \$26,018.61  
- **Tienda 2:** \$25,216.24  
- **Tienda 3:** \$24,805.68  
- **Tienda 4:** \$23,459.46  

**Observación:**  
A pesar de que la Tienda 4 presenta el costo de envío más bajo, esto no compensa su menor facturación total.

**Visualización:**  
Se utilizó un gráfico de barras para comparar los costos de envío promedio entre las tiendas.

## Conclusión y Recomendación

**Integración de Hallazgos:**

- **Ingresos:** La Tienda 4 presenta la menor facturación total, indicativo de un bajo desempeño comercial.
- **Satisfacción del Cliente:** Aunque las calificaciones son similares, Tienda 1 y Tienda 4 muestran valores ligeramente inferiores.
- **Productos y Categorías:** El análisis de ventas por categoría y productos vendidos indica patrones consistentes en todas las tiendas, sin compensar la brecha en ingresos.
- **Costos de Envío:** Aun teniendo un menor costo de envío, la Tienda 4 no logra superar sus deficiencias en facturación.

**Recomendación Final:**

Se recomienda **vender la Tienda 4** por las siguientes razones:

- Presenta el menor ingreso total, lo que sugiere una eficiencia comercial inferior.
- La leve diferencia en las calificaciones promedio y en la distribución de ventas no compensa la significativa brecha en ingresos.
- La reducción en el costo de envío no es suficiente para equilibrar los aspectos negativos en términos de rentabilidad.

La venta de la Tienda 4 permitirá redirigir recursos e inversiones hacia las tiendas con mejor desempeño (particularmente Tienda 2 y Tienda 3), optimizando la eficiencia y la rentabilidad global del grupo Alura Store.

#Análisis del desempeño geográfico
"""

import folium
from IPython.display import display

tienda['lat'] = pd.to_numeric(tienda['lat'], errors='coerce')
tienda['lon'] = pd.to_numeric(tienda['lon'], errors='coerce')

plt.figure(figsize=(10,8))
sc = plt.scatter(tienda['lon'], tienda['lat'], c=tienda['Precio'], cmap='viridis', alpha=0.6)
plt.colorbar(sc, label="Precio")
plt.title("Distribución geográfica de ventas - Tienda 1 (Scatter)")
plt.xlabel("Longitud")
plt.ylabel("Latitud")
plt.show()

plt.figure(figsize=(10,8))
hb = plt.hexbin(tienda['lon'], tienda['lat'], gridsize=50, cmap='inferno', mincnt=1)
plt.colorbar(hb, label="Número de ventas")
plt.title("Mapa de calor de ventas - Tienda 1 (Hexbin)")
plt.xlabel("Longitud")
plt.ylabel("Latitud")
plt.show()

center_lat = tienda['lat'].mean()
center_lon = tienda['lon'].mean()
mapa_tienda1 = folium.Map(location=[center_lat, center_lon], zoom_start=10)

for index, row in tienda.iterrows():
    folium.CircleMarker(
        location=[row['lat'], row['lon']],
        radius=3,
        color='blue',
        fill=True,
        fill_color='blue',
        fill_opacity=0.6,
        popup=f"Precio: ${row['Precio']}"
    ).add_to(mapa_tienda1)

display(mapa_tienda1)

